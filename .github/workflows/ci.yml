name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  rust:
    name: Rust tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src/blockchain-node
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Cargo
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            src/blockchain-node -> target

      - name: Run tests
        run: cargo test --all --locked --verbose

  go:
    name: Go tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src/contrib-oracle
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"
          cache: true

      - name: Run tests
        run: go test ./... -v

  frontend:
    name: Frontend tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src/frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js (cached)
        if: ${{ hashFiles('src/frontend/package-lock.json') != '' || hashFiles('src/frontend/npm-shrinkwrap.json') != '' || hashFiles('src/frontend/yarn.lock') != '' }}
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: |
            src/frontend/package-lock.json
            src/frontend/npm-shrinkwrap.json
            src/frontend/yarn.lock

      - name: Setup Node.js (no cache)
        if: ${{ hashFiles('src/frontend/package-lock.json') == '' && hashFiles('src/frontend/npm-shrinkwrap.json') == '' && hashFiles('src/frontend/yarn.lock') == '' }}
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install --no-audit --no-fund

      - name: Run tests (if present)
        env:
          CI: true
        run: npm run test --if-present -- --watchAll=false
